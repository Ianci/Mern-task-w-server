{"version":3,"sources":["images/addtask.svg","components/main/LandingPage.js","context/todos/todoContext.js","hooks/useForm.js","context/ui/uiContext.js","context/task/taskContext.js","components/main/selectedTask/SelectedTaskForm.js","components/main/selectedTask/Task.js","components/main/selectedTask/TaskList.js","components/main/selectedTask/SelectedTask.js","components/main/MainContent.js","components/main/sidebarForm.js","components/main/Task/Task.js","components/main/Task/ListTask.js","components/main/Sidebar.js","context/auth/authContext.js","components/main/UserNav.js","components/main/TaskScreen.js","components/navb/Navbar.js","components/auth/LoginForm.js","images/login.svg","components/auth/Login.js","components/auth/RegisterForm.js","images/register.svg","components/auth/Register.js","config/axios.js","config/authToken.js","routes/AppRoutes.js","types/index.js","context/task/taskReducer.js","context/task/taskState.js","context/ui/uiReducer.js","context/ui/uiState.js","context/todos/todoReducer.js","context/todos/todoState.js","context/auth/authReducer.js","context/auth/authState.js","App.js","index.js"],"names":["LandingPage","className","src","addtask","alt","todoContext","createContext","useForm","initialState","useState","state","setstate","handleChange","e","target","name","value","resetForm","newState","uiContext","taskContext","SelectedTaskForm","todo","useContext","newTodo","getTodosActiveProject","todoClicked","task","errorTask","setErrorTask","idTask","map","taskId","_id","number","console","log","onSubmit","preventDefault","trim","lenght","type","placeholder","onChange","Todo","deleteTodo","changeState","taskactive","idid","changeTodoState","actualTodo","onClick","TaskList","todosForCurrentTask","TransitionGroup","CSSTransition","timeout","classNames","id","SelectedTask","taskname","MainContent","SidebarForm","showForm","setShowForm","errorTodo","setErrorTodo","newTask","length","Task","activeTask","deleteTask","ListTask","tasks","getTask","useEffect","Sidebar","sidebar","setSidebar","handleShowSidebar","authContext","UserNav","history","useHistory","user","logOutUser","push","TaskScreen","context","authenticatedUser","taskScreenFunction","Navbar","LoginForm","email","password","setError","error","authCon","userLogin","messageLogin","auth","autoComplete","to","style","textDecoration","Login","img1","RegisterForm","authCont","registerUser","message","uiContextState","repeat","Register","axiosClient","axios","create","baseURL","process","REACT_APP_BACKEND_URL","tokenAuth","token","defaults","headers","common","AppRoutes","exact","path","component","types","taskReducer","actions","payload","filter","TaskState","props","useReducer","dispatch","a","get","response","data","post","delete","Provider","children","uiReducer","errorApi","UiState","errorRegister","loading","todoReducer","action","TodoState","activeTodo","params","todos","todoId","editTodo","todoActive","authReducer","localStorage","setItem","isAuth","removeItem","AuthState","getItem","values","errorMessage","msg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba4398fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/addtask.8fb98ab9.svg\";","import React from 'react'\r\nimport addtask  from '../../images/addtask.svg'\r\nexport const LandingPage = () => {\r\n    return (\r\n        <div className=\"maincontent-landingpage\">\r\n            <h2 className=\"register__h1\">Selecciona una tarea existente o crea una!</h2>\r\n            <img className=\"maincontent__landingpage-img\" src={addtask} alt=\"task\"/>\r\n        </div>\r\n    )\r\n}\r\n","import {createContext} from 'react'\r\n\r\nexport const todoContext = createContext()","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [state, setstate] = useState(initialState)\r\n    \r\n    const handleChange = e => {\r\n        setstate({\r\n            ...state,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const resetForm = (newState = initialState) => {\r\n        setstate(newState)\r\n    }\r\n    return (\r\n        {state, handleChange, resetForm}\r\n    )\r\n}","import { createContext } from 'react'\r\n\r\nexport const uiContext = createContext()\r\n\r\n","import { createContext } from 'react'\r\n\r\nexport const taskContext = createContext()\r\n\r\n","import React, {useContext } from 'react'\r\nimport { todoContext } from '../../../context/todos/todoContext'\r\nimport { useForm } from '../../../hooks/useForm'\r\nimport { uiContext } from '../../../context/ui/uiContext'\r\nimport { taskContext } from '../../../context/task/taskContext'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const SelectedTaskForm = () => {\r\n    \r\n    const { state, handleChange, resetForm } = useForm({ todo: \"\"})\r\n    const { todo } = state\r\n    \r\n    //Distintos context\r\n    const { newTodo, getTodosActiveProject, todoClicked} = useContext(todoContext)\r\n    const { task } = useContext(taskContext)\r\n    const { errorTask, setErrorTask } = useContext(uiContext)\r\n  \r\n    \r\n   //Extraemos la id del Task actual\r\n    let idTask = task.map(taskId => (taskId._id))\r\n    const [ number ] = idTask\r\n    console.log(number)\r\n\r\n    //Validacion\r\n    const validation = () => {\r\n        if(todo.trim() === \"\"){\r\n            setErrorTask('No puedes enviar una tarea vacía')\r\n            return false\r\n        } else if(todo.lenght > 48){\r\n            setErrorTask('Exceso de caracteres excedidos')\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n \r\n    \r\n    //Submit function\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(validation()){\r\n            \r\n            state.task = number\r\n            newTodo(state)\r\n            //Se ejecuta y nos trae las tareas del task activo\r\n            getTodosActiveProject(number)\r\n            resetForm()\r\n            setErrorTask()\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"maincontent__formTask\">\r\n            <form onSubmit={handleSubmit} className=\"maincontent__form-box\">\r\n            <input type=\"text\" placeholder=\"Agrega una tarea relacionada\"\r\n            name=\"todo\" value={todo} className=\"register__input maincontent__form-input\"\r\n            onChange={handleChange}/>\r\n            <button type=\"submit\" className=\"register__btn-submit maincontent__form-btn\" value={todoClicked ? \"Guardar cambios\" : \"Agregar\"}>Agregar</button>\r\n            {errorTask && <p className=\"taskScreen__error-msg\">{errorTask}</p>}\r\n            </form>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { taskContext } from '../../../context/task/taskContext'\r\nimport { todoContext } from '../../../context/todos/todoContext'\r\n\r\n\r\nexport const Todo = ({todo}) => {\r\n    \r\n    //todoContext\r\n    const { deleteTodo, getTodosActiveProject, changeState} = useContext(todoContext)\r\n    //taskContext\r\n    const context = useContext(taskContext)\r\n    const { task } = context\r\n    //Extraemos el id \r\n    let idTask = task.map(taskactive => (taskactive._id))\r\n    const [idid] = idTask\r\n    \r\n    \r\n    //Eliminar todo\r\n    const deleteCurrentTodo = id => {\r\n        //Eliminar la tarea con su id personal\r\n        deleteTodo(id)\r\n        //Recargar la página con el id del task\r\n        getTodosActiveProject(idid)\r\n    }\r\n\r\n    //Cambiar el estado de true a false y viceversa\r\n   const changeTodoState = (actualTodo) => {\r\n    if(actualTodo.state){\r\n        actualTodo.state = false\r\n    } else {\r\n        actualTodo.state = true\r\n    }\r\n    changeState(actualTodo)\r\n   }\r\n   //Destructuring state and id of todo\r\n    const { state, _id } = todo\r\n    \r\n   //Guardando la tarea actual para luego editarla\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"maincontent__todo-div\">\r\n            <p className= {state ? \"taskScreen__paragraph maincontent_todo-name-complete\" : \"taskScreen__paragraph maincontent_todo-name-incomplete\"}>{todo.todo}</p>\r\n            <div className=\"maincontent__todo-buttons\">\r\n            {state ? <button type=\"button\" className={state ? \"register__btn-submit-completed\" :\"register__btn-submit\"} onClick={()=>changeTodoState(todo)}>Completo</button>\r\n            :\r\n            <button type=\"button\" className={state ? \"register__btn-submit-completed\" :\"register__btn-submit\"} onClick={() => changeTodoState(todo)}>Incompleto</button>\r\n        }\r\n            \r\n            <button type=\"button\" className=\"register__btn-submit\" onClick={()=> deleteCurrentTodo(_id)}>Delete</button>\r\n            \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport '../../../index.css'\r\nimport { todoContext } from '../../../context/todos/todoContext'\r\nimport { Todo } from './Task'\r\nimport {\r\n    CSSTransition,\r\n    TransitionGroup,\r\n  } from 'react-transition-group';\r\nexport const TaskList = () => {\r\n    \r\n    const { todosForCurrentTask }= useContext(todoContext)\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"maincontent__todo-list\">\r\n            \r\n\r\n\r\n           \r\n\r\n            {todosForCurrentTask.lenght === 0 \r\n            ?\r\n            <p>Crea una nueva tarea</p>\r\n            :\r\n            \r\n            <TransitionGroup>\r\n            {todosForCurrentTask.map(todo=> (\r\n                <CSSTransition\r\n                key={todo.id}\r\n                timeout={300}\r\n                classNames=\"item\"\r\n                 >\r\n                <Todo\r\n                key={todo.id}\r\n                todo={todo}/>\r\n                </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n            }\r\n            \r\n       \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { SelectedTaskForm } from './SelectedTaskForm'\r\nimport { TaskList } from './TaskList'\r\nimport { taskContext } from '../../../context/task/taskContext'\r\nimport { LandingPage } from '../LandingPage'\r\nexport const SelectedTask = () => {\r\n\r\n    const { task } = useContext(taskContext)\r\n     \r\n    if(!task) return <LandingPage />\r\n\r\n    let name = task.map(taskname => taskname.task)\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <h1 className=\"navbar__logo maincontent__h1\">{name}</h1>\r\n           \r\n            <SelectedTaskForm />    \r\n\r\n            <TaskList />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { LandingPage } from './LandingPage'\r\nimport { SelectedTask } from './selectedTask/SelectedTask'\r\n\r\nexport const MainContent = () => {\r\n    return (\r\n        <div className=\"maincontent__container\">\r\n        <SelectedTask />            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { taskContext } from '../../context/task/taskContext'\r\nimport { uiContext } from '../../context/ui/uiContext'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\n\r\nexport const SidebarForm = () => {\r\n    //LocalState del formulario \r\n    const [ showForm, setShowForm ] = useState(false)\r\n    //uiContext\r\n    const { errorTodo, setErrorTodo} = useContext(uiContext)\r\n    \r\n    //taskContext\r\n    const taskContextState = useContext(taskContext)\r\n    const { newTask } = taskContextState\r\n    //Custom hook\r\n    const {state, handleChange, resetForm} = useForm({task: \"\"})\r\n    const { task } = state\r\n\r\n    //Validation\r\n    const validation = () => {\r\n        if(task.trim() === \"\"){\r\n            setErrorTodo('Por favor completa este campo')\r\n            return false\r\n        }\r\n        else if(task.length > 15){\r\n            setErrorTodo('Límite de 15 caracteres excedidos')\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    //Mostrar el formulario \r\n    const handleShowForm = () => {\r\n        setShowForm(!showForm)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if(validation()){\r\n           \r\n            newTask(state)\r\n            setErrorTodo(null)\r\n            resetForm()\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"taskScreen__sidebarForm-container\">\r\n            <button type=\"text\" className=\"register__btn-submit\" onClick={handleShowForm}>{showForm ? \"Ocultar\" : \"Crear nuevo tema\"}</button>\r\n            {\r\n                showForm && \r\n                (\r\n                    <form className=\"taskScreen-sidebarForm\" onSubmit={handleSubmit}>\r\n                        <input type=\"text\" className=\"register__input\" placeholder=\"Tema de la/s tarea\" name=\"task\" value={task}onChange={handleChange} />\r\n                        \r\n                        <button type=\"submit\" className=\"register__btn-submit\" >Agregar</button>\r\n                    </form>\r\n                )\r\n            }\r\n            {errorTodo && <p className=\"taskScreen__error-msg\">{errorTodo}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\nimport { taskContext } from '../../../context/task/taskContext'\r\nimport { todoContext } from '../../../context/todos/todoContext'\r\nexport const Task = ({task}) => {\r\n    \r\n    const { activeTask, deleteTask} = useContext(taskContext)\r\n    const { getTodosActiveProject } = useContext(todoContext)\r\n\r\n    const handleActiveTaskAndGetTodos = (id) => {\r\n        activeTask(id)\r\n        getTodosActiveProject(id)\r\n        \r\n    }\r\n\r\n   \r\n    return (\r\n        \r\n        <div className=\"tasks__singletask\">\r\n\r\n        <li className=\"task__li\">\r\n            <p className=\"taskScreen__paragraph\" onClick={() =>  handleActiveTaskAndGetTodos(task._id)}>{task.task}</p>\r\n        </li>\r\n        <span className=\"taskScreen__span\"\r\n        onClick={()=> deleteTask(task._id)}>x</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useContext, useEffect} from 'react'\r\nimport { Task } from './Task'\r\nimport { taskContext } from '../../../context/task/taskContext'\r\nimport '../../../index.css'\r\nimport {\r\n    CSSTransition,\r\n    TransitionGroup,\r\n  } from 'react-transition-group';\r\n\r\nexport const ListTask = () => {\r\n\r\n    const {tasks, getTask} = useContext(taskContext)\r\n    \r\n    useEffect(() => {\r\n        getTask()\r\n    }, [])\r\n\r\n    if(tasks.length === 0 ) return null;\r\n    return (\r\n        \r\n        <ul>\r\n        <TransitionGroup>\r\n        {tasks.map(task=>(\r\n            <CSSTransition\r\n                key={task._id}\r\n                timeout={100}\r\n                classNames=\"item\"\r\n                >\r\n            <Task \r\n            key={task.id}\r\n            task={task}/>\r\n            </CSSTransition>\r\n            ))\r\n            }\r\n        </TransitionGroup>\r\n        </ul>\r\n        \r\n      \r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport {FiMenu} from 'react-icons/fi'\r\nimport { SidebarForm } from './sidebarForm'\r\nimport { ListTask } from './Task/ListTask'\r\n\r\nexport const Sidebar = () => {\r\n    const [ sidebar, setSidebar ] = useState(true)\r\n    \r\n    const handleShowSidebar = () => setSidebar(!sidebar)\r\n   \r\n    \r\n    return (\r\n        <>\r\n        <div className={sidebar ? \"taskScreen__sidebar-active\" : \"taskScreen__sidebar-hide\"}>\r\n            \r\n            <div className=\"taskScreen__icon-container\">\r\n            <FiMenu className=\"taskScreen__icon\" onClick={handleShowSidebar}/>\r\n            </div>\r\n            <h1 className=\"navbar__logo taskScreen__padding\">Reac<strong className=\"navbar__logo-t\">T</strong>ask</h1>\r\n            <div className=\"taskScreen__content\">\r\n            <p className=\"taskScreen__paragraph\">Agrupa tus tareas por tema</p>\r\n\r\n            <SidebarForm />\r\n\r\n            <div className=\"taskScreen__mytask\">\r\n                <h2 className=\"navbar__logo margin\">Mis tareas</h2>\r\n                <ListTask />\r\n            </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className=\"\">\r\n\r\n        <FiMenu className={sidebar ? \"taskScreen__icon-hidden\" : \"taskScreen__icon alone\"} onClick={handleShowSidebar}/>\r\n        </div>\r\n            \r\n        \r\n        </>\r\n    )\r\n}\r\n","import { createContext } from 'react'\r\n\r\nexport const authContext = createContext()","import React, { useContext} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { authContext } from '../../context/auth/authContext'\r\nexport const UserNav = () => {\r\n    const history = useHistory()\r\n    const { user, logOutUser } = useContext(authContext)\r\n    const { name } = !!user && user\r\n\r\n    const logOutUserFunction = () => {\r\n        logOutUser()\r\n        history.push('/login')\r\n    }\r\n    return (\r\n        <div className=\"taskScreen__userNav\">\r\n            <p className=\"taskScreen__paragraph taskScreen__hello-user\">Hola {name}</p>\r\n            <button type=\"button\" className=\"register__btn-submit taskScreen__btn-logout\" onClick={logOutUserFunction}>Logout</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext, useEffect} from 'react'\r\nimport { MainContent } from './MainContent'\r\nimport { Sidebar } from './Sidebar'\r\nimport { UserNav } from './UserNav'\r\nimport { authContext } from '../../context/auth/authContext'\r\n\r\nexport const TaskScreen = () => {\r\n    \r\n    const context = useContext(authContext)\r\n    const { authenticatedUser, taskScreenFunction } = context\r\n\r\n    useEffect(() => {\r\n        authenticatedUser()\r\n        taskScreenFunction()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        \r\n        <Sidebar />\r\n        \r\n        \r\n        <UserNav />\r\n        <main>\r\n        <MainContent />\r\n        </main>\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className=\"navbar__container\">\r\n\r\n            <div className=\"navbar__container-logo\">\r\n                \r\n            <h1 className=\"navbar__logo\">Reac<strong className=\"navbar__logo-t\">T</strong>ask</h1>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { uiContext } from '../../context/ui/uiContext'\r\nimport { authContext } from '../../context/auth/authContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const LoginForm = () => {\r\n    const history = useHistory()\r\n    //Custom hook\r\n    const { state, handleChange, resetForm } = useForm({ email: \"\", password: \"\"})\r\n    const { email, password } = state\r\n    //Context\r\n    const { setError, error } = useContext(uiContext)\r\n    const authCon = useContext(authContext)\r\n    const { userLogin, messageLogin, auth } = authCon\r\n\r\n    useEffect(() => {\r\n        if(auth){\r\n            history.push('/home')\r\n        }\r\n    }, [auth, history])\r\n\r\n    const validation = () => {\r\n        if(email.trim() === \"\"){\r\n            setError('Introduce tu email')\r\n            return false;\r\n        } else {\r\n            if(password.trim() === \"\"){\r\n                setError('Introduce tu password')\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if(validation()){\r\n            resetForm()\r\n            setError(null)\r\n            userLogin(state)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n    <form className=\"register__form-form\"\r\n    onSubmit={handleSubmit}>\r\n       \r\n\r\n        <input type=\"email\" className=\"register__input\" name=\"email\"  autoComplete=\"off\" placeholder=\"Introduce your email\"\r\n        onChange={handleChange} value={email}/>\r\n        <input type=\"password\" className=\"register__input\" name=\"password\" autoComplete=\"off\" placeholder=\"Introduce your password\"\r\n         onChange={handleChange} value={password}/>\r\n       \r\n        <div className=\"login__p-container\">\r\n\r\n        <button type=\"submit\" className=\"login__btn-margin\">Ingresar</button>\r\n        {error && <p className=\"taskScreen__error-msg\">{error}</p>}\r\n        <p className=\"login__paragraph-margin\">Aún no tienes cuenta? Regístrate <Link to=\"/\" style={{textDecoration: \"none\"}}><strong className=\"register__paragraph-desc-t\">acá</strong></Link></p>\r\n        </div>\r\n        {messageLogin && <p className=\"taskScreen__error-msg\">{messageLogin}</p>}\r\n    </form>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/login.33a71cbe.svg\";","import React, {useContext} from 'react'\r\nimport { Navbar } from '../navb/Navbar'\r\nimport { LoginForm } from './LoginForm'\r\nimport img1 from '../../images/login.svg'\r\n\r\n\r\n\r\nexport const Login = () => {\r\n   \r\n    \r\n    return (\r\n        <>\r\n        <Navbar />\r\n        <div className=\"register__container\">\r\n            <div className=\"register___form\">\r\n            <h1 className=\"login__h1\">Ingrese a su cuenta ahora!</h1>\r\n              <LoginForm />\r\n            </div>\r\n            <div className=\"register__right-content\">\r\n                <div className=\"register__container-right\">\r\n                   \r\n                    <p className=\"register__paragraph-desc\">Conéctate a tu cuenta para organizar tus tareas!</p>\r\n                    <img className=\"login__img\" src={img1} alt=\"login\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useContext, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { uiContext } from '../../context/ui/uiContext'\r\nimport { authContext } from '../../context/auth/authContext'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const RegisterForm = () => {\r\n    const history = useHistory()\r\n    const authCont = useContext(authContext)\r\n    const { registerUser, message, auth } = authCont\r\n\r\n    const uiContextState = useContext(uiContext)\r\n    const { setError, error } = uiContextState\r\n    //Custom hook\r\n    const { state, handleChange, resetForm } = useForm({ name: \"\", email: \"\", password: \"\", repeat: \"\"})\r\n    const { name, email, password, repeat } = state\r\n\r\n    //If auth changes to true, redirect user to home\r\n    useEffect(() => {\r\n       if(auth){\r\n           history.push('/home')\r\n       }\r\n    }, [auth, history])\r\n\r\n    //Form validation\r\n    const validation = () => {\r\n        if(name.trim() === \"\"){\r\n            setError('Por favor introduce tu nombre')\r\n            return false;\r\n        } else if(name.length > 12) {\r\n            setError('Introduce un nombre más corto')\r\n            return false;\r\n        }\r\n        if(email.trim() === \"\"){\r\n            setError('Por favor introduce tu email')\r\n            return false;\r\n        }\r\n        if(password.trim() === \"\"){\r\n            setError('Por favor introduce tu contraseña')\r\n            return false;\r\n        } else if(password.lenght > 8){\r\n            setError('La contraseña debe tener al menos 8 caracteres')\r\n        }\r\n        if(repeat.trim() === \"\"){\r\n            setError('Repita su contraseña')\r\n            return false;\r\n        } else if(password !== repeat){\r\n            setError('Las contraseñas no coinciden')\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    //Submit\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if(validation()){\r\n            resetForm()\r\n            setError(null)\r\n            registerUser(state)\r\n            history.push('/home')\r\n        }\r\n    }\r\n    return (\r\n        <form className=\"register__form-form\" onSubmit={handleSubmit}>\r\n            <input type=\"text\" className=\"register__input\" name=\"name\"  value={name} autoComplete=\"off\" placeholder=\"Introduce your name\"\r\n            onChange={handleChange}/>\r\n            <input type=\"email\" className=\"register__input\" name=\"email\"  value={email}  autoComplete=\"off\" placeholder=\"Introduce your email\"\r\n            onChange={handleChange}/>\r\n            <input type=\"password\" className=\"register__input\" name=\"password\" value={password}  autoComplete=\"off\" placeholder=\"Introduce your password\"\r\n            onChange={handleChange}/>\r\n            <input type=\"password\" className=\"register__input\" name=\"repeat\" value={repeat} autoComplete=\"off\" placeholder=\"Repeat your password\"\r\n            onChange={handleChange}/>\r\n            <button type=\"submit\" className=\"register__btn-submit\"\r\n            >Crear cuenta</button>\r\n            <p className=\"register__paragraph-desc already\">Ya tienes cuenta? Ingresa <Link to=\"/login\" style={{textDecoration: \"none\"}}><strong className=\"register__paragraph-desc-t\">acá</strong></Link></p>\r\n            {error && <p className=\"taskScreen__error-msg\">{error}</p>}\r\n            {message && <p className=\"taskScreen__error-msg\">{message}</p>}\r\n        </form>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/register.36f143a4.svg\";","import React from 'react'\r\nimport { Navbar } from '../navb/Navbar'\r\nimport { RegisterForm } from './RegisterForm'\r\nimport img1 from '../../images/register.svg'\r\nexport const Register = () => {\r\n    return (\r\n        <>\r\n        <Navbar />\r\n        <div className=\"register__container\">\r\n            <div className=\"register___form\">\r\n            <h1 className=\"register__h1\">Cree su primera cuenta ahora!</h1>\r\n               <RegisterForm />\r\n            </div>\r\n            <div className=\"register__right-content\">\r\n                <div className=\"register__container-right\">\r\n                    <p className=\"register__paragraph-desc\">Mern<strong className=\"register__paragraph-desc-t\">T</strong>ask es una App para crear y organizar tus tareas, dividirlas por tema y mucho más</p>\r\n                    <p className=\"register__paragraph-desc\">Crea tu cuenta ahora y comienza a usarla de inmediato!</p>\r\n                    <img className=\"register__img\" src={img1} alt=\"register\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n})\r\n\r\nexport default axiosClient","import axiosClient from './axios'\r\n\r\nexport const tokenAuth = token => {\r\n    if(token){\r\n        axiosClient.defaults.headers.common['x-auth-token'] = token\r\n    } else {\r\n        delete axiosClient.defaults.headers.common['x-auth-token'];\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport { TaskScreen } from '../components/main/TaskScreen'\r\nimport { PrivateRoute } from './PrivateRoutes'\r\nimport { PublicRoute } from './PublicRoutes'\r\nimport { Login } from '../components/auth/Login'\r\nimport { Register } from '../components/auth/Register'\r\nimport { tokenAuth } from '..//config/authToken'\r\n\r\n\r\nexport const AppRoutes = () => {\r\n   \r\n        \r\n    return (\r\n        <Router>\r\n            <div>\r\n            \r\n            <Switch>\r\n            <Route  exact path=\"/\"  component={Register}/>\r\n            <Route   path=\"/login\"  component={Login}/>\r\n            <Route path=\"/home\" component={TaskScreen}/>\r\n            <Redirect to=\"/login\" />\r\n            </Switch>\r\n            </div>\r\n        </Router>\r\n         \r\n    )\r\n}\r\n","export const types = {\r\n    getTasks: '[TASKS] GET_TASKS_ACTION',\r\n    newTask: '[TASKS] NEW_TASK_ACTION',\r\n    activeTask: '[TASKS] ACTIVE_TASK_ACTION',\r\n    deleteTaskActive: '[TASKS] DELETE_TASK_ACTION',\r\n    errorApi: '[TASK] ERRO_API',\r\n\r\n    setError: '[ERROR] SET_ERROR_FORM',\r\n    setErrorTask: '[ERROR] SET_ERROR_TASK',\r\n    setErrorTodo: '[ERROR] SET_ERROR_TODO',\r\n    setErrorApi: '[ERROR] SET_ERROR_API',\r\n\r\n    newTodo : '[TODO] NEW_TODO',\r\n    getTodosActiveProject: '[TODO] GET_TODOS',\r\n    deleteTodo: '[TODO] DELETE_TODO',\r\n    editTodo: '[TODO] EDIT_TODO',\r\n    activeTodo: '[TODO] ACTIVE_TODO',\r\n    getTodos: '[TODO] GET_TODOS',\r\n\r\n    changeStateTodo: '[TODO] CHANGE_STATE',\r\n    actualTodo: '[TODO] ACTUAL_TODO',\r\n    updateTodo: '[TODO] UPDATE_TODO',\r\n\r\n    succesfullRegister : '[AUTH] SUCCESS_REGISTER',\r\n    errorRegisterApi: '[AUTH] ERROR_REGISTER',\r\n    getUser: '[AUTH] GET_USER',\r\n    succesfullLogin: '[AUTH] SUCCESFULL_LOGIN',\r\n    errorLogin: '[AUTH] ERROR_LOGIN',\r\n    logOut: '[AUTH] LOGOUT',\r\n\r\n    taskScreenPage: '[AUTH] TASK_SCREEN'\r\n}","import { types } from '../../types'\r\n\r\n\r\nexport const taskReducer = (state , actions ) => {\r\n    const {type, payload }= actions\r\n    switch (type) {\r\n        case types.getTasks:\r\n            return {\r\n                ...state,\r\n                tasks: payload\r\n            }\r\n        case types.newTask:\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks, payload]\r\n            }\r\n        case types.activeTask: \r\n        return {\r\n            ...state,\r\n            task: state.tasks.filter(task => task._id === payload)\r\n        }\r\n        case types.deleteTaskActive: \r\n        return {\r\n            ...state,\r\n            tasks: state.tasks.filter(task => task._id !== payload),\r\n            task: null\r\n        }\r\n        case types.errorApi:\r\n            return {\r\n                ...state,\r\n                error: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useReducer } from 'react'\r\nimport { types } from '../../types'\r\nimport { taskContext } from './taskContext'\r\nimport { taskReducer } from './taskReducer'\r\nimport axiosClient from '../../config/axios';\r\n\r\n\r\nexport const TaskState = props => {\r\n\r\n   \r\n    const initialState = {\r\n        tasks: [],\r\n        task: null,\r\n        error: null\r\n    }\r\n\r\n    //Dispatch para ejecutar las acciones \r\n    const [state, dispatch] = useReducer(taskReducer, initialState)\r\n\r\n    //Functions para el CRUD del proyect\r\n    //getTasks\r\n    const getTask = async () => {\r\n       try {\r\n        const response = await axiosClient.get('/api/task')\r\n        \r\n        dispatch({\r\n            type: types.getTasks,\r\n            payload: response.data.tasks\r\n        })\r\n       } catch (error) {\r\n           \r\n        let alert = 'Hubo un error'\r\n        dispatch({\r\n            type: types.errorApi,\r\n            payload: alert\r\n        })\r\n       }\r\n    }\r\n\r\n    //newTasks\r\n    const newTask = async (task) => {\r\n        \r\n        try {\r\n            const response = await axiosClient.post('/api/task', task)\r\n            console.log(response.data)\r\n            dispatch({\r\n                type: types.newTask,\r\n                payload: response.data\r\n            })\r\n        } catch (error) {\r\n            let alert = 'Hubo un error'\r\n            dispatch({\r\n            type: types.errorApi,\r\n            payload: alert\r\n        })\r\n        }\r\n    }\r\n\r\n    //activeTask\r\n    const activeTask = taskId => {\r\n        dispatch({\r\n            type: types.activeTask,\r\n            payload: taskId\r\n        })\r\n    }\r\n\r\n    //Delete task\r\n    const deleteTask = async id => {\r\n       try {\r\n        await axiosClient.delete(`/api/task/${id}`)\r\n        dispatch({\r\n            type: types.deleteTaskActive,\r\n            payload: id\r\n        })\r\n       } catch (error) {\r\n        let alert = 'Hubo un error'\r\n        dispatch({\r\n            type: types.errorApi,\r\n            payload: alert\r\n        })\r\n       }\r\n    }\r\n\r\n    return (\r\n        <taskContext.Provider \r\n        value={{\r\n            tasks: state.tasks,\r\n            showForm: state.showForm,\r\n            task: state.task,\r\n            error: state.error,\r\n            getTask,\r\n            newTask,\r\n            activeTask,\r\n            deleteTask\r\n        }}\r\n        >\r\n            {props.children}\r\n        </taskContext.Provider>\r\n    )\r\n}","import { types } from '../../types'\r\n\r\n\r\nexport const uiReducer = (state , actions ) => {\r\n    const {type, payload }= actions\r\n    switch (type) {\r\n        \r\n        case types.setError:\r\n            return {\r\n                ...state,\r\n                error: payload\r\n            }    \r\n        case types.setErrorTask:\r\n            return {\r\n                ...state,\r\n                errorTask: payload\r\n            }\r\n        case types.setErrorTodo:\r\n        return {\r\n            ...state,\r\n            errorTodo: payload\r\n        }\r\n        case types.setErrorApi:\r\n            return {\r\n                ...state,\r\n                errorApi: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useReducer } from 'react'\r\nimport { types } from '../../types';\r\nimport { uiContext } from './uiContext';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const UiState = props => {\r\n    const initialState = {\r\n        errorTask: null,\r\n        error: null,\r\n        errorTodo: null,\r\n        errorRegister: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(uiReducer, initialState)\r\n    \r\n    const setError = e => {\r\n        dispatch({\r\n            type: types.setError,\r\n            payload: e\r\n        })\r\n    }\r\n\r\n    const setErrorTask = e => {\r\n        dispatch({\r\n            type: types.setErrorTask,\r\n            payload: e\r\n        })\r\n    }\r\n    const setErrorTodo = e => {\r\n        dispatch({\r\n            type: types.setErrorTodo,\r\n            payload: e\r\n        })\r\n    }\r\n    return (\r\n        <uiContext.Provider value={{\r\n            error: state.error, \r\n            loading: state.loading,\r\n            errorTask: state.errorTask,\r\n            errorTodo: state.errorTodo,\r\n            setError,\r\n            setErrorTask,\r\n            setErrorTodo\r\n            }}>\r\n            {props.children}\r\n        </uiContext.Provider>\r\n    )\r\n}","import { types } from '../../types'\r\n\r\nexport const todoReducer = (state, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case types.getTodosActiveProject: \r\n        return {\r\n            ...state,\r\n            todosForCurrentTask: payload\r\n        }\r\n        case types.newTodo:\r\n            return{\r\n                ...state,\r\n                todosForCurrentTask: [...state.todosForCurrentTask, payload]\r\n            }\r\n        case types.deleteTodo:\r\n            return {\r\n                ...state,\r\n                todosForCurrentTask: state.todosForCurrentTask.filter(todo => todo._id !== payload)\r\n            } \r\n        case types.changeStateTodo:\r\n            \r\n            return {\r\n                ...state,\r\n                todosForCurrentTask: state.todosForCurrentTask.map(todo => todo._id === payload.id ? payload : todo )\r\n            }\r\n       \r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useReducer } from 'react';\r\nimport { types } from '../../types'\r\nimport { todoContext } from './todoContext'\r\nimport { todoReducer } from './todoReducer'\r\nimport axiosClient from '../../config/axios';\r\n\r\nexport const TodoState = props => {\r\n    \r\n    const initialState = {\r\n        \r\n        todosForCurrentTask: [],\r\n        activeTodo: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(todoReducer, initialState)\r\n\r\n    //Functions\r\n\r\n    //Todos active project\r\n    const getTodosActiveProject = async task => {\r\n        try {\r\n            const response = await axiosClient.get('/api/todo', { params : { task }})\r\n            \r\n            dispatch({\r\n                type: types.getTodosActiveProject,\r\n                payload: response.data.todos\r\n            })  \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n    //todo active  \r\n    const todoActive = (todo) => {\r\n        dispatch({\r\n            type: todoActive,\r\n            types: todo\r\n        })\r\n    }\r\n    //Add todo\r\n    const newTodo = async (todo) => {\r\n        try {\r\n            await axiosClient.post('/api/todo', todo)\r\n            \r\n            dispatch({\r\n                type: types.newTodo,\r\n                payload: todo\r\n            })     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n       \r\n    }\r\n\r\n    //Delete task\r\n    const deleteTodo =  async (todoId) => {\r\n        try {\r\n            await axiosClient.delete(`/api/todo/${todoId}`)\r\n            dispatch({\r\n                type: types.deleteTodo,\r\n                payload: todoId\r\n            })\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    //Edit task\r\n    const editTodo = (todo) => {\r\n        dispatch({\r\n            type: types.editTodo,\r\n            payload: todo\r\n        })\r\n    }\r\n    //Change state to completed\r\n    const changeState = (todo) => {\r\n        dispatch({\r\n            type: types.changeStateTodo,\r\n            payload: todo\r\n        })\r\n    }\r\n  \r\n \r\n    \r\n    return (\r\n        \r\n        <todoContext.Provider value={{\r\n           \r\n            activeTodo: state.todo,\r\n            todosForCurrentTask: state.todosForCurrentTask,\r\n            getTodosActiveProject,\r\n            editTodo,\r\n            deleteTodo,\r\n            newTodo,\r\n            todoActive,\r\n            changeState,\r\n            \r\n        }}>\r\n            {props.children}\r\n        </todoContext.Provider>\r\n    )\r\n}","import { types } from '../../types'\r\n\r\nexport const authReducer = (state, action) => {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case types.succesfullLogin:\r\n        case types.succesfullRegister:\r\n            localStorage.setItem('token', payload)\r\n        \r\n            return {\r\n                ...state,\r\n                auth: true,\r\n                message: null,\r\n                token: payload,\r\n                isAuth: true\r\n           \r\n            }\r\n        case types.taskScreenPage: \r\n            return {\r\n                ...state,\r\n                auth: true,\r\n                message: null,\r\n                isAuth: true\r\n\r\n            }\r\n        case types.errorLogin:\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                messageLogin: payload,\r\n                auth: false,\r\n                isAuth: false\r\n            }\r\n        case types.logOut:\r\n            localStorage.removeItem('token')\r\n            \r\n            return{\r\n                ...state,\r\n                token: null,\r\n                auth: false,\r\n                isAuth: false,\r\n                user: null,\r\n                message: null,\r\n                messageLogin: null\r\n            }\r\n        case types.errorRegisterApi:\r\n            localStorage.removeItem('token')\r\n           \r\n            return {\r\n                ...state,\r\n                token: null,\r\n                message: payload,\r\n                auth: false,\r\n                isAuth: false\r\n            }\r\n        case types.getUser: \r\n        \r\n        return {\r\n            ...state,\r\n            user: payload,\r\n            isAuth: true,\r\n            auth: true\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useEffect, useReducer } from 'react';\r\nimport { authContext } from './authContext';\r\nimport { authReducer } from './authReducer';\r\nimport { types } from '../../types';\r\nimport axiosClient from '../../config/axios';\r\nimport { tokenAuth } from '../../config/authToken';\r\n\r\n\r\nexport const AuthState = props => {\r\n\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        auth: null,\r\n        user: null,\r\n        isAuth: false,\r\n        message: null,\r\n        messageLogin: null\r\n    }\r\n    const [state, dispatch] = useReducer(authReducer, initialState)\r\n\r\n  \r\n\r\n    const registerUser = async values => {\r\n        try {\r\n            const response = await axiosClient.post('/api/users', values);\r\n           \r\n            let token = response.data.token\r\n\r\n            dispatch({\r\n                type: types.succesfullRegister,\r\n                payload: token\r\n            })\r\n\r\n            authenticatedUser()\r\n        } catch (error) {\r\n            \r\n            let errorMessage = error.response.data.msg\r\n            dispatch({\r\n                type: types.errorRegisterApi,\r\n                payload: errorMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    const authenticatedUser = async () => {\r\n        //Le pasamos el token por headers\r\n        const token = localStorage.getItem('token')\r\n        if(token){\r\n            tokenAuth(token)\r\n        }\r\n\r\n        try {\r\n            const response = await axiosClient.get('/api/auth')\r\n            \r\n            dispatch({\r\n                type: types.getUser,\r\n                payload: response.data.user\r\n            })\r\n        } catch (error) {\r\n            let errorMessage = error.response.data.msg\r\n            dispatch({\r\n                type: types.errorLogin,\r\n                payload: errorMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    //User login\r\n    const userLogin = async values => {\r\n        try {\r\n\r\n            const response = await axiosClient.post('/api/auth', values)\r\n            let token = response.data.token\r\n            console.log(token)\r\n            dispatch({\r\n            type: types.succesfullLogin,\r\n            payload: token\r\n            })\r\n\r\n            authenticatedUser()\r\n            \r\n        } catch (error) {\r\n            \r\n            console.log(error.response)\r\n            let errorMessage = error.response.data.msg\r\n            dispatch({\r\n                type: types.errorLogin,\r\n                payload: errorMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    //Task screen action\r\n    const taskScreenFunction = () => {\r\n        dispatch({\r\n            type: types.taskScreenPage\r\n        })\r\n    }\r\n\r\n    const logOutUser = () => {\r\n        dispatch({\r\n            type: types.logOut\r\n        })\r\n    }\r\n    return (\r\n        <authContext.Provider \r\n        value={{\r\n        token: state.token,\r\n        auth: state.auth,\r\n        user: state.user,\r\n        isAuth: state.isAuth,\r\n        message: state.message,\r\n        messageLogin: state.messageLogin,\r\n        registerUser,\r\n        userLogin,\r\n        authenticatedUser,\r\n        taskScreenFunction,\r\n        logOutUser\r\n        }}\r\n        >\r\n            {props.children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n","import { AppRoutes } from \"./routes/AppRoutes\";\r\nimport { TaskState } from './context/task/taskState'\r\nimport { UiState } from './context/ui/uiState'\r\nimport { TodoState } from './context/todos/todoState'\r\nimport { AuthState } from './context/auth/authState'\r\nimport { tokenAuth } from \"./config/authToken\";\r\n\r\nfunction App() {\r\n  \r\n  const token = localStorage.getItem('token');\r\n  if(token){\r\n    tokenAuth(token)\r\n  }\r\n  return (\r\n    <TaskState>\r\n      <UiState>\r\n        <TodoState>\r\n          <AuthState>\r\n\r\n            <AppRoutes />\r\n        \r\n          </AuthState>\r\n        </TodoState>\r\n      </UiState>  \r\n    </TaskState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/styles.scss'\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}